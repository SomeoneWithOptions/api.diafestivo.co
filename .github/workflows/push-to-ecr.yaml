name: Build and Push to AWS ECR

on:
  push:
    branches:
      - deploy
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push-architecture-specific:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        architecture: ["amd64", "arm64"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::745912973548:role/githubactions-role
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: build and push for amd64 and arm64
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: api-diafestivo

          ARCH: ${{ matrix.architecture }}
        run: |
          docker build --platform linux/${ARCH} -t $REGISTRY/$REPOSITORY:$ARCH .
          docker push $REGISTRY/$REPOSITORY:$ARCH

  build-and-push-latest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::745912973548:role/githubactions-role
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push latest tag
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: api-diafestivo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build --platform linux/amd64 -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker tag $REGISTRY/$REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:latest
